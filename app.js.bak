const  mongoose = require("mongoose");

main().catch(err => console.log(err));

async function main() {
  // await mongoose.connect("mongodb+srv://parnella:Rojo5677@cluster0.wewbbzc.mongodb.net/?retryWrites=true&w=majority",{useNewUrlParser: true});
  // await mongoose.connect("mongodb://localhost:27017/fruitsDB");
  await mongoose.connect("mongodb://127.0.0.1:27017/fruitsDB");
  
  const fruitSchema = new mongoose.Schema({
    name: String,
    rating: Number,
    review: String
  });
  
  const Fruit = mongoose.model("Fruit",fruitSchema);

  const fruit = new Fruit({
    name: "Pear",
    rating: 3,
    review: "delicious under ideal conditions, but if not ripe enough or overripte, can get real ugly."
  });
  
  const kiwi = new Fruit({
    name: "Kiwi",
    rating: 10,
    review: "The best fruit!"
  });
  
  const orange = new Fruit({
    name: "Orange",
    rating: 7,
    review: "Hit or miss, the good ones are good."
  });
  
  const banana = new Fruit({
    name: "Banana",
    rating: 7,
    review: "Great for smoothies."
  });
  
  // fruit.save();
  Fruit.insertMany([kiwi,orange,banana], (err) => {
    if (err) {
      console.log(err)
    } else {
      console.log("Successfully saved all fruits!");
    }
  });
  
  
  //challenge
  
  const personSchema = new mongoose.Schema({
    name: String,
    age: Number    
  });
  
  const Person = new mongoose.model("Person",personSchema);
  
  const newKid = new Person({
    name: "Me",
    age: 32
  });
  
  // newKid.save();
}











/* const { MongoClient, ServerApiVersion } = require('mongodb');
const uri = "mongodb+srv://parnella:Rojo5677@cluster0.wewbbzc.mongodb.net/?retryWrites=true&w=majority";
 
// Create a MongoClient with a MongoClientOptions object to set the Stable API version
const client = new MongoClient(uri, {
  serverApi: {
    version: ServerApiVersion.v1,
    strict: true,
    deprecationErrors: true,
  }
});
 
// declare database & collection working with
const db = "fruitsDB";
const coll = "fruits";
 
async function main() {
  try {
    // connect
    await client.connect();
    console.log("Successfully connected to MongoDB.");
 
    // insert a fruit
    await addFruits(client,[
      {
        name: "Apple",
        score: 8,
        review: "Great fruit"
      },
      {
        name: "Orange",
        score: 6,
        review: "Kinda sour"
      },
      {
        name: "Banana",
        score: 9,
        review: "Great stuff!"
      }
    ])
 
    // find and log all fruit in the database
    await findAllFruits(client);
 
  } catch (e) {
    console.log("Error caught: " + e)
  } finally {
    // Ensures that the client will close when you finish/error
    await client.close();
  }
}
 
main().catch(console.dir);
 
async function addFruit(client, newFruit){
  const result = await client.db(db).collection(coll).insertOne(newFruit);
  console.log(`New listing created with the following id: ${result.insertedId}`);
}
 
async function addFruits(client, newFruitsArray){
  const result = await client.db(db).collection(coll).insertMany(newFruitsArray);
  console.log(`${result.insertedCount} listing(s) created with the following ID(s):`);
  console.log(`${result.insertedIds}`)
}
 
async function findAllFruits(client){
  const results = await client.db(db).collection(coll).find().toArray();
  console.log("Found the following fruits");
  console.log(results);
}
 */